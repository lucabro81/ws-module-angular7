{
  "txt": [
    "     ////////////////////////////////////////",
    "    //                                    //",
    "   //          !!IMPORTANT!!             //",
    "  // DO NOT CANCEL THE \"//--//\" SYMBOL! //",
    " //                                    //",
    "////////////////////////////////////////",
    "",
    "import {Injectable} from \"@angular/core\";",
    "import {HttpClient} from \"@angular/common/http\";",
    "import {EndPoints} from \"{ep_class_path}\";",
    "-->import {On{nome_mtd_u}ServiceMethodListener} from \"./decorators/On{nome_mtd_u}ServiceMethodListener\"",
    "//--//",
    "-->import {{nome_mtd_u}ServiceMethodSignalContainer} from \"./decorators/{nome_mtd_u}ServiceMethodSignalContainer\";",
    "//--//",
    "import {AbsBaseService, IService, ResponseVO, Get, Post} from \"ws-module-angular7\"",
    "",
    "</",
    "class {nome_mtd_u}SrvProperties {",
    "}",
    "/>",
    "//--//",
    "",
    "@Injectable({",
      "\tprovidedIn: 'root'",
    "})",
    "export class {nome_srv_u}Service extends AbsBaseService {",
      "",
      "\t-->public {nome_mtd}Srv:IService<any, On{nome_mtd_u}ServiceMethodListener, {nome_mtd_u}ServiceMethodSignalContainer, {nome_mtd_u}SrvProperties>;",
      "\t//--//",
      "",
      "\tconstructor(http:HttpClient) {",
        "\t\tsuper(http);",
        "",
        "\t\t-->this.{nome_mtd}Srv = this.setServiceObj({nome_mtd_u}ServiceMethodSignalContainer, \"{nome_mtd}Srv\", {nome_mtd_u}SrvProperties);",
        "\t\t//--//",
      "\t}",
      "",
      "\t</",
      "\t/**",
      "\t *",
      "\t * @param params",
      "\t * @returns {RequestManager<ResponseVO<ResponseVO<any>>, on{nome_mtd_u}ServiceMethodListener>}",
      "\t */",
      "\t@{http_method}<ResponseVO<any>, On{nome_mtd_u}ServiceMethodListener>({",
        "\t\tendpoint: {endpoint_obj},",
        "\t\tconfig: {}",
      "\t})",
      "\tprivate _{nome_mtd}Srv(params:any):any {",
        "\t\treturn {",
          "\t\t\tsuccess_handler:",
            "\t\t\t\t(response: ResponseVO<any>) => {",
              "\t\t\t\t\t// params ora contiene request_manager, success_handler e error_handler",
              "\t\t\t\t\t/* do something */",
            "\t\t\t\t},",
            "",
          "\t\t\terror_handler:",
            "\t\t\t\t(error) => {",
              "\t\t\t\t\t/* do something */",
            "\t\t\t\t}",
        "\t\t}",
      "\t}",
      "\t/>",
      "\t//--//",
      "\t",
      "////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////",
      "//                              !!!!!! ADD YOUR METHOD ONLY BELOW THIS LINE !!!!!                                     //",
      "////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////",
      "",
      "",
      "",
    "}"
  ]
}